// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/engine/hello": {
            "get": {
                "description": "Triggers the Hello RPC on the C++ Thrift EngineService",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "engine"
                ],
                "summary": "Call C++ EngineService Hello RPC",
                "parameters": [
                    {
                        "type": "string",
                        "default": "World",
                        "description": "Name to greet",
                        "name": "name",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/healthz": {
            "get": {
                "description": "Liveness/readiness probe endpoint",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "health"
                ],
                "summary": "Health check",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/hello": {
            "get": {
                "description": "Basic greeting from Harmonia API Gateway",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "root"
                ],
                "summary": "Hello endpoint",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/logic/hello": {
            "get": {
                "description": "Triggers the Hello RPC on the Python gRPC LogicService",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "logic"
                ],
                "summary": "Call Python LogicService Hello RPC",
                "parameters": [
                    {
                        "type": "string",
                        "default": "World",
                        "description": "Name to greet",
                        "name": "name",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        }
    },
    "tags": [
        {
            "description": "Root endpoints",
            "name": "root"
        },
        {
            "description": "Python gRPC LogicService",
            "name": "logic"
        },
        {
            "description": "C++ Thrift EngineService",
            "name": "engine"
        },
        {
            "description": "Liveness \u0026 readiness",
            "name": "health"
        }
    ]
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "0.1.1",
	Host:             "",
	BasePath:         "/api",
	Schemes:          []string{},
	Title:            "Harmonia API",
	Description:      "REST gateway for the Harmonia project. Orchestrates Python (gRPC) and C++ (Thrift) services.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
